package main

import (
	"fmt"
	"gorm.io/driver/postgres"
	"gorm.io/gorm"
)

type User struct {
	ID    uint   `gorm:"primaryKey"`
	Name  string
	Email string `gorm:"unique"`
}

func main() {
	dsn := "host=localhost user=postgres password=1234 dbname=testdb port=5432 sslmode=disable"
	db, err := gorm.Open(postgres.Open(dsn), &gorm.Config{})
	if err != nil {
		panic("failed to connect database")
	}
	fmt.Println("Connected to PostgreSQL!")

	// Auto migrate (create table if not exists)
	db.AutoMigrate(&User{})

	// ---------- CRUD ----------
	// CREATE
	db.Create(&User{Name: "Mahir", Email: "mahir@example.com"})

	// READ
	var user User
	db.First(&user, "name = ?", "Mahir")
	fmt.Printf("Read User: ID=%d, Name=%s, Email=%s\n", user.ID, user.Name, user.Email)

	// UPDATE
	db.Model(&user).Update("Email", "new@example.com")
	fmt.Println("Updated user")

	// DELETE
	db.Delete(&user)
	fmt.Println("Deleted user")
}
